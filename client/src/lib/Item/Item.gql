fragment LabelTemplateFields on label_template_map {
    sequence
    criteria
    label {
        width
        content
        created_at
        edit_of_id
        height
        id
        item_id
        updated_at
        title
    }    
}
fragment ItemFields on item {
    id
    class
    name: object(path: "name")
    object
    # bundle {
    #     #
    # }
    # labels {
    #     #
    # }
    # manufacturerItems {
    #     #
    # }
    # orderItems {
    #     #
    # }
    # vendorItems {
    #     #
    # }
    labelTemplates(
        order_by: {
            sequence: asc
        }, 
        where: {}
    ) {
        ...LabelTemplateFields
    }
}
# query SearchItems( $categories: [enum_item_class_enum!] ) {
#     items: item(
#         where: {
#             class: {
#                 _in: $categories
#             }
#         }
#         order_by: {id: asc}
#     ) {
#         ...ItemFields
#     }
# }

query GetItems($categories: [enum_item_class_enum!]) {
    items: item(
        where: { 
            class: { _in: $categories } 
        }, 
        order_by: { id: asc }) {
        ...ItemFields
    }
}
query GetItemsById($ids: [Int!]) {
    items: item(
        where: { 
            id: { _in: $ids}
        }, 
        order_by: { id: asc }) {
        ...ItemFields
    }
}

query GetItem($id: Int!) {
    item: item_by_pk(id: $id) {
        ...ItemFields
    }
}

query ItemSearch($search_text: String!) {
    search(
        args: { 
            query_text: $search_text
        }, 
        where: { 
            class: {}
        }
    ) {
        id
        class
        name: text
        metadata
    }
}

mutation DeleteItem($id: Int!) {
  delete_item_by_pk( id: $id ){
    id
    class
  }
}


# query SearchItems {
#     item(
#         where: {
#             object: {
#                 # _has_key: "drive_size",
#                 _contains: { drive_size: "3" }
#             }
#         }
#     ) {
#         id
#         name: object(path: "name")
#         drive_size: object(path: "drive_size")
#     }
# }
